permissions:
  contents: write

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Step 5: Build Docker image
    - name: Build Docker image
      run: docker build -t my-app .

    - run: npm ci

    - run: npm run build --if-present
    - run: npm start

    # Start notification and run build
    - name: Send Start Notification
      env:
        WEBHOOK_URL: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}  # Store webhook in GitHub Secrets
      run: |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        ACTOR=$(git config user.name)
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        bash /home/archu/dock/notify-start.sh "$WEBHOOK_URL" "$BRANCH_NAME" "$ACTOR" "$COMMIT_MESSAGE"
    
    # Notify on success
    - name: Notify Success
      if: success()  # Runs only if the previous step succeeded
      env:
        WEBHOOK_URL: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
      run: |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        ACTOR=$(git config user.name)
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        bash /home/archu/dock/notify-success.sh "$WEBHOOK_URL" "$BRANCH_NAME" "$ACTOR" "$COMMIT_MESSAGE"

    # Notify on failure
    - name: Notify Failure
      if: failure()  # Runs only if the previous step failed
      env:
        WEBHOOK_URL: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
      run: |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        ACTOR=$(git config user.name)
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        bash /home/archu/dock/notify-failure.sh "$WEBHOOK_URL" "$BRANCH_NAME" "$ACTOR" "$COMMIT_MESSAGE"
